// Mostra ou esconde o chat quando a bolinha √© clicada e exibe as op√ß√µes iniciais
document.getElementById('chat-button').addEventListener('click', function () {
    const chatContainer = document.getElementById('chat-container');
    if (chatContainer.style.display === 'none') {
        chatContainer.style.display = 'block';
        showInitialopcoes(); // Exibe as op√ß√µes quando o chat √© aberto
    } else {
        chatContainer.style.display = 'none';
    }
});

// Fun√ß√£o para exibir op√ß√µes iniciais assim que o chat √© ativado
function showInitialopcoes() {
    const mensagem = 'Ol√°! Como posso te ajudar hoje? Clique em uma das op√ß√µes abaixo:';
    const opcoes = ['üìö Cursos', 'üéØ PORCOINS', 'üë• Nossa equipe', 'üìû Contato'];

    addMessage(mensagem, 'bot');

    opcoes.forEach(option => {
        addOptionButton(option);
    });
}

// Fun√ß√£o para lidar com o clique em uma op√ß√£o
function handleOptionClick(opcaotexto) {
    addMessage(opcaotexto, 'user'); // Adiciona a mensagem do usu√°rio

    if (opcaotexto === 'üìö Cursos') {
        showCursosOpcoes(); // Exibe as op√ß√µes sobre os cursos
    } else if (opcaotexto === 'üéØ PORCOINS') {
        showPorcoinsOpcoes(); // Exibe as op√ß√µes sobre a PORCOINS
    } else if (opcaotexto === 'üë• Nossa equipe') {
        showTeamopcoes(); // Mostra as op√ß√µes da equipe
    } else if (opcaotexto === 'üìû Contato') {
        showContatoOpcoes(); // Exibe as op√ß√µes de contato
    } else if (opcaotexto === 'üìß Email') {
        showEmail(); // Resposta para Email
    } else if (opcaotexto === 'üîó GitHub') {
        showGitHub(); // Resposta para GitHub
    } else if (opcaotexto === 'üí¨ Discord') {
        showDiscord(); // Resposta para Discord
    } else if (opcaotexto === 'üìû Telefone') {
        showTelefone(); // Resposta para Telefone
    } else if (opcaotexto === '‚≠ê Avalia√ß√£o') {
        showAvaliacao(); // Resposta para Avalia√ß√£o
    } else if (opcaotexto === 'Sobre') {
        showSobre(); // Resposta para "Sobre"
    } else if (opcaotexto === 'Contribui√ß√µes') {
        showContribuicoes(); // Resposta para "Contribui√ß√µes"
    } else if (opcaotexto === 'Nossa Inspira√ß√£o') {
        showNossaInspiracao(); // Resposta para "Nossa Inspira√ß√£o"
    } else if (opcaotexto === 'üìö Cursos Dispon√≠veis') {
        showCursosDisponiveis(); // Resposta para Cursos Dispon√≠veis
    } else if (opcaotexto === 'üîó Links √öteis') {
        showLinksUteis(); // Resposta para Links √öteis
    } else if (opcaotexto === 'üìö Apostilas') {
        showApostilas(); // Resposta para Apostilas
    } else if (opcaotexto === 'üé• V√≠deos Extras') {
        showVideosExtras(); // Resposta para V√≠deos Extras
    } else if (opcaotexto === 'üîç O que √© a PORCOINS') {
        showOQueEAPORCOINS(); // Resposta para "O que √© a PORCOINS"
    } else if (opcaotexto === 'üéØ Qual a miss√£o') {
        showQualAMissao(); // Resposta para "Qual a miss√£o"
    } else if (opcaotexto === 'üí° O que oferecemos') {
        showOQueOferecemos(); // Resposta para "O que oferecemos"
    } else if (opcaotexto === 'üìö Nossa did√°tica') {
        showNossaDidatica(); // Resposta para "Nossa did√°tica"
    } else if (opcaotexto === 'Gustavo') {
        showGustavo(); // Resposta para Gustavo
    } else if (opcaotexto === 'Felipe') {
        showFelipe(); // Resposta para Felipe
    } else if (opcaotexto === 'Guilherme') {
        showGuilherme(); // Resposta para Guilherme
    } else if (opcaotexto === 'Pedro') {
        showPedro(); // Resposta para Pedro
    } else {
        const defaultMessage = 'Desculpe, n√£o entendi sua solicita√ß√£o.';
        setTimeout(() => addMessage(defaultMessage, 'bot'), 500);
    }
}

// Fun√ß√£o para exibir as op√ß√µes de contato
function showContatoOpcoes() {
    const contatomensagem = 'Escolha uma forma de contato:';
    const contatoopcoes = ['üìß Email', 'üîó GitHub', 'üí¨ Discord', 'üìû Telefone', '‚≠ê Avalia√ß√£o'];

    addMessage(contatomensagem, 'bot');

    contatoopcoes.forEach(option => {
        addOptionButton(option); // Cria os bot√µes de cada op√ß√£o de contato
    });
}

// Fun√ß√µes de resposta para cada op√ß√£o de contato
function showEmail() {
    const message = 'Voc√™ pode entrar em contato com o email de pedrobrito.hc@gmail.com';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showGitHub() {
    const message = 'Visite nosso GitHub para mais detalhes sobre nossos projetos: https://github.com/PedroBrito0519/PORCOINS---Sempre-educando-seu-bolso';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showDiscord() {
    const message = 'Junte-se ao nosso servidor no Discord para conversar com a nossa comunidade esta no github';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showTelefone() {
    const message = 'Voc√™ pode entrar em contato pelo telefone: (11) 94315-7970';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showAvaliacao() {
    const message = 'Gostar√≠amos de saber sua opini√£o! Por favor, deixe sua avalia√ß√£o na pagina de contato';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

// Fun√ß√£o para exibir as op√ß√µes sobre os cursos
function showCursosOpcoes() {
    const cursosMessage = 'Escolha uma das op√ß√µes para saber mais sobre nossos cursos:';
    const cursosOpcoes = ['üìö Cursos Dispon√≠veis', 'üîó Links √öteis', 'üìö Apostilas', 'üé• V√≠deos Extras'];

    addMessage(cursosMessage, 'bot');

    cursosOpcoes.forEach(option => {
        addOptionButton(option); // Cria os bot√µes de cada op√ß√£o sobre os cursos
    });
}

// Fun√ß√µes de resposta para as op√ß√µes sobre cursos
function showCursosDisponiveis() {
    const message = 'Atualmente temos os seguintes cursos dispon√≠veis: \n1. Educa√ß√£o Financeira para Iniciantes \n2. Investimentos para Profissionais \n3. Planejamento Financeiro Pessoal \n4. Estrat√©gias Avan√ßadas de Investimentos';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showLinksUteis() {
    const message = 'Aqui est√£o alguns links √∫teis: \n- Link 1: https://www.caixa.gov.br/educacao-financeira/Paginas/default.aspx \n- Link 2: https://www.educamaisbrasil.com.br/enem/educacao-financeira';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showApostilas() {
    const message = 'Confira nossas apostilas dispon√≠veis para download no filtro de dados: ';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showVideosExtras() {
    const message = 'Aqui est√£o alguns v√≠deos extras que podem ser √∫teis para voc√™ na pagina de cursos';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

// Fun√ß√£o para exibir as op√ß√µes sobre PORCOINS
function showPorcoinsOpcoes() {
    const porcoinsMessage = 'Escolha uma das op√ß√µes para saber mais sobre a PORCOINS:';
    const porcoinsOpcoes = ['üîç O que √© a PORCOINS', 'üéØ Qual a miss√£o', 'üí° O que oferecemos', 'üìö Nossa did√°tica'];

    addMessage(porcoinsMessage, 'bot');

    porcoinsOpcoes.forEach(option => {
        addOptionButton(option); // Cria os bot√µes de cada op√ß√£o sobre PORCOINS
    });
}

// Fun√ß√µes de resposta para as op√ß√µes sobre PORCOINS
function showOQueEAPORCOINS() {
    const message = 'A PORCOINS √© uma plataforma dedicada ao ensino de educa√ß√£o financeira, com cursos e materiais para ajud√°-lo a alcan√ßar seus objetivos financeiros.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showQualAMissao() {
    const message = 'Nossa miss√£o √© capacitar as pessoas para atingirem a liberdade financeira atrav√©s de conhecimentos pr√°ticos e acess√≠veis.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showOQueOferecemos() {
    const message = 'A PORCOINS oferece cursos, materiais educativos, consultorias e suporte para ajudar voc√™ a transformar sua vida financeira.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showNossaDidatica() {
    const message = 'Nossa did√°tica √© simples, pr√°tica e objetiva, com foco em exemplos reais e aplica√ß√µes que voc√™ pode usar no seu dia a dia.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

// Fun√ß√µes para as op√ß√µes de time
function showTeamopcoes() {
    const teamMessage = 'Aqui est√£o os membros da nossa equipe. Clique em um nome para saber mais:';
    const teamopcoes = ['Gustavo', 'Felipe', 'Guilherme', 'Pedro'];

    addMessage(teamMessage, 'bot');

    teamopcoes.forEach(option => {
        addOptionButton(option); // Cria os bot√µes para cada membro da equipe
    });
}

// Respostas dos membros da equipe
function showGustavo() {
    const message = 'Meu nome √© gustavo barros e estou cursando o primeuro ano do ensino medio tecnico na fiap school busco aprimorar minhas abilidades como programador e desenvolvedor front end pretendo em breve entrar no mercado de trabalho';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showFelipe() {
    const message = 'Ol√°! Sou Felipe Oliveira, tenho 15 anos e sou um programador iniciante apaixonado por tecnologia. Comecei a aprender programa√ß√£o com HTML, CSS e JavaScript e adoro criar pequenos projetos, como jogos e sites. Estou sempre em busca de novos desafios e sonho em trabalhar em uma grande empresa de tecnologia no futuro!';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showGuilherme() {
    const message = 'Meu nome √© Guilherme Domingues e estou iniciando meus estudos na √°rea de programa√ß√£o, focando tanto em front-end quanto em back-end. Tenho desenvolvido pequenos projetos de forma aut√¥noma e busco constantemente evoluir minhas habilidades. Estou sempre em busca de aprender novas linguagens para aprimorar meu conhecimento e me desenvolver na √°rea de programa√ß√£o.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

function showPedro() {
    const message = 'Meu nome √© Pedro, Sou um desenvolvedor Front-end/Back-end iniciante, estudo na FIAP SCHOOL no 1 ano do ensino medio, busco a todo momento evoluir meu aprendizado e progredir cada vez mais em minha carreira como programador.';
    setTimeout(() => addMessage(message, 'bot'), 500);
}

// Fun√ß√£o para enviar mensagem
function sendMessage() {
    const userInput = document.getElementById('user-input').value;
    if (userInput.trim() === "") return;  // Evita enviar mensagens vazias

    addMessage(userInput, 'user');
    document.getElementById('user-input').value = '';  // Limpa o campo de entrada

    // Responder com base no conte√∫do do site
    const botResponse = generateResponse(userInput);
    setTimeout(() => addMessage(botResponse, 'bot'), 500); // Resposta do bot com pequeno atraso
}

// Fun√ß√£o para adicionar mensagem ao chat
function addMessage(message, sender) {
    const chatBox = document.getElementById('messages');
    const messageElement = document.createElement('div');
    messageElement.className = sender === 'user' ? 'user-message' : 'bot-message';
    messageElement.textContent = message;
    chatBox.appendChild(messageElement);
    chatBox.scrollTop = chatBox.scrollHeight;  // Mant√©m o chat rolado para a √∫ltima mensagem
}

// Fun√ß√£o para adicionar bot√µes de op√ß√£o no chat
function addOptionButton(opcaotexto) {
    const chatBox = document.getElementById('messages');
    const optionElement = document.createElement('div');
    optionElement.className = 'option-button';
    optionElement.textContent = opcaotexto;
    optionElement.addEventListener('click', () => handleOptionClick(opcaotexto)); // Define o evento de clique para a op√ß√£o
    chatBox.appendChild(optionElement);
    chatBox.scrollTop = chatBox.scrollHeight; // Mant√©m o chat rolado para a √∫ltima mensagem
}

// Adiciona o evento de tecla Enter para enviar mensagem
document.getElementById('user-input').addEventListener('keydown', function (event) {
    if (event.key === 'Enter') {
        sendMessage();
    }
});
// Mostra ou esconde o chat quando a bolinha √© clicada
document.getElementById('chat-button').addEventListener('click', function () {
    const chatContainer = document.getElementById('chat-container');
    const closeChatButton = document.getElementById('close-chat-button');
    if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
        chatContainer.style.display = 'block';
        closeChatButton.style.display = 'inline-block'; // Exibe o bot√£o de fechar
        showInitialopcoes(); // Exibe as op√ß√µes quando o chat √© aberto
    } else {
        chatContainer.style.display = 'none';
        closeChatButton.style.display = 'none'; // Oculta o bot√£o de fechar
    }
});

// Fun√ß√£o para reiniciar o chat
function resetChat() {
    const messages = document.getElementById('messages');
    messages.innerHTML = ''; // Limpa as mensagens do chat
    showInitialopcoes(); // Exibe as op√ß√µes iniciais novamente
}

// Fun√ß√£o para fechar o chat
function closeChat() {
    const chatContainer = document.getElementById('chat-container');
    const closeChatButton = document.getElementById('close-chat-button');
    chatContainer.style.display = 'none'; // Esconde o chat
    closeChatButton.style.display = 'none'; // Esconde o bot√£o de fechar
}
